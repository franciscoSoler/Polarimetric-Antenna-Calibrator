function [bTransCal bRecCal] = test( calPaths )
% calPaths corresponds to attenuation and phase shift of each path into the 
% antenna
calPaths
cal = [calPaths( 7:10,: )
	   calPaths( 12:15,: )
	   calPaths( 17:20,: )
	   calPaths( 22:25,: )]



%a b c d b1 e f g h
A = [1  0  0  0  1  0  0  0
     2 -2  0  0   0  0  0  0
     0  2 -2  0    0  0  0  0
     0  0  2 -2    0  0  0  0
     0  1  0  0    0  1  0  0
     2  0 -2  0    0  0  0  0
     0  2  0 -2    0  0  0  0
     0  0  1  0    0  0  1  0
     2  0  0 -2    0  0  0  0
     2  0  0 -2    0  0  0  0
     0  0  0  1    0  0  0  1
     1  0 -1  0    0  0  0  0
     0  1  0 -1    0  0  0  0
     0 -1  2 -1    0  0  0  0
     0 -1  0  2    0  0  1  0
     0  0  0  0   1  1  1  1];
%{
A = [1  0  0  0  1  1  0  0  0
     2 -2  0  0  0  0  0  0  0
     0  2 -2  0  0  0  0  0  0
     0  0  2 -2  0  0  0  0  0
     0  1  0  0  1  0  1  0  0
     2  0 -2  0  0  0  0  0  0
     0  2  0 -2  0  0  0  0  0
     0  0  1  0  1  0  0  1  0
     2  0  0 -2  0  0  0  0  0
     2  0  0 -2  0  0  0  0  0
     0  0  0  1  1  0  0  0  1
     1  0 -1  0  0  0  0  0  0
     0  1  0 -1  0  0  0  0  0
     0 -1  2 -1  0  0  0  0  0
     0 -1  0  2  0  0  0  1  0
     0  0  0  0 -1  1  1  1  1];
%}
% b7 b8 b9 b10 b12 b13 b14 b15 b17 b18 b19 b20 b22 b23 b24 b25 
B = [ 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
	  1  1  0  0 -1 -1  0  0  0  0  0  0  0  0  0  0
	  0  0  0  0  0  1  1  0  0 -1 -1  0  0  0  0  0
	  0  0  0  0  0  0  0  0  0  0  1  1  0  0 -1 -1
	  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0
	  1  0  1  0  0  0  0  0 -1  0 -1  0  0  0  0  0
	  0  0  0  0  0  1  0  1  0  0  0  0  0 -1  0 -1
	  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0
	  1  0  0  1  0  0  0  0  0  0  0  0 -1  0  0 -1
	  0  1  1  0  0  0  0  0  0  0  0  0  0 -1 -1  0
	  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1
	  0  1  0  0  0  0  0  0  0 -1  0  0  0  0  0  0
	  0  0  0  0  0  0  1  0  0  0  0  0  0  0 -1  0
	  0  0  0  0 -1  0  0  0  1  1  0  0  0 -1  0  0
	  0  0  0  0 -1  0  0  0  0  0  0  0  0  1  0  0
	  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0];

	C = (A'*A)\(A'*B);
	%C = inv(A'*A) * A' * BTrans;

	att = C*cal( :,1 )
	phase = C*cal( :,2 )
	att = att( 1:4 );
	phase = phase( 1:4 );
	bTransCal = [att phase];
	bRecCal = [att phase];
end
